// libraries
#include <MKRGSM.h>
#include <TMP36.h>
#include <ThingSpeak.h>
#include <OneWire.h>
#include <DallasTemperature.h>

#define ONE_WIRE_BUS 2  // DS18B20 pin, what pin we're connected to
OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature DS18B20(&oneWire);


//  ThingSpeak credentails
unsigned long myChannelNumber = 224142;  // Replace the 0 with your channel number
const char * myWriteAPIKey = "BHZO61ZX9LLLAYIK";    // Paste your ThingSpeak Write API Key between the quotes 

// APN data
#define GPRS_APN       "4g.tele2.se"
#define GPRS_LOGIN     ""
#define GPRS_PASSWORD  ""
#define PINNUMBER      "0000"

// initialize the library instance
GPRS gprs;
GSM gsmAccess;     // include a 'true' parameter for debug enabled
GSMClient client; // port 80 (http default)

// timeout
const unsigned long __TIMEOUT__ = 10 * 1000;

//TMP36 myTMP36(A0, 3.3);


void setup() {
  // initialize serial communications and wait for port to open:
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }
    ThingSpeak.begin(client);
  }

void loop() {

  

  Serial.println("Starting Arduino web client.");

  // connection state
  boolean connected = false;

  while (!connected) {
    if ((gsmAccess.begin(PINNUMBER) == GSM_READY) &&
      (gprs.attachGPRS("4g.tele2.se", "", "") == GPRS_READY)) {
    connected = true;
    } else {
      Serial.println("Not connected");
      delay(1000);
      }
  }

  Serial.println("Connecting...");

  

  GSMClient client;

  DS18B20.requestTemperatures();
  float t = DS18B20.getTempCByIndex(0);

  if (isnan(t)) {
    Serial.println("Failed to read from sensor!");
    return;
  }
  // Write to ThingSpeak. 
  if (client.connect("api.thingspeak.com",80)) {  //   "184.106.153.149" or api.thingspeak.com
    int x = ThingSpeak.writeField(myChannelNumber, 1, t, myWriteAPIKey);
    if(x == 200){   // Check the return code
      Serial.println("Channel update successful.");
      }
    else{
      Serial.println("Problem updating channel. HTTP error code " + String(x));
    }
  }
  
client.stop();

gsmAccess.shutdown();   

Serial.println("Waiting...");
delay(20*1000);  // thingspeak needs minimum 15 sec delay between updates  
}
